                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module MPU6050
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _delay_ms
                                     12 	.globl _Single_ReadI2C
                                     13 	.globl _Single_WriteI2C
                                     14 	.globl _readByte_PARM_2
                                     15 	.globl _writeByte_PARM_3
                                     16 	.globl _writeByte_PARM_2
                                     17 	.globl _i2c_package
                                     18 	.globl _Mmode
                                     19 	.globl _Gscale
                                     20 	.globl _Ascale
                                     21 	.globl _MPU6050_INIT
                                     22 	.globl _writeByte
                                     23 	.globl _readByte
                                     24 	.globl _readMPU6050_AccelData
                                     25 	.globl _readMPU6050_GyroData
                                     26 	.globl _resetMPU6050
                                     27 ;--------------------------------------------------------
                                     28 ; special function registers
                                     29 ;--------------------------------------------------------
                                     30 	.area RSEG    (ABS,DATA)
      000000                         31 	.org 0x0000
                                     32 ;--------------------------------------------------------
                                     33 ; special function bits
                                     34 ;--------------------------------------------------------
                                     35 	.area RSEG    (ABS,DATA)
      000000                         36 	.org 0x0000
                                     37 ;--------------------------------------------------------
                                     38 ; overlayable register banks
                                     39 ;--------------------------------------------------------
                                     40 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         41 	.ds 8
                                     42 ;--------------------------------------------------------
                                     43 ; internal ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DSEG    (DATA)
      000000                         46 _Ascale::
      000000                         47 	.ds 1
      000001                         48 _Gscale::
      000001                         49 	.ds 1
      000002                         50 _Mmode::
      000002                         51 	.ds 1
      000003                         52 _i2c_package::
      000003                         53 	.ds 6
      000009                         54 _writeByte_PARM_2:
      000009                         55 	.ds 1
      00000A                         56 _writeByte_PARM_3:
      00000A                         57 	.ds 1
      00000B                         58 _readByte_PARM_2:
      00000B                         59 	.ds 1
      00000C                         60 _readMPU6050_AccelData_buffer_65536_27:
      00000C                         61 	.ds 3
      00000F                         62 _readMPU6050_AccelData_sloc0_1_0:
      00000F                         63 	.ds 2
      000011                         64 _readMPU6050_GyroData_buffer_65536_29:
      000011                         65 	.ds 3
      000014                         66 _readMPU6050_GyroData_sloc0_1_0:
      000014                         67 	.ds 2
                                     68 ;--------------------------------------------------------
                                     69 ; overlayable items in internal ram 
                                     70 ;--------------------------------------------------------
                                     71 ;--------------------------------------------------------
                                     72 ; indirectly addressable internal ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area ISEG    (DATA)
                                     75 ;--------------------------------------------------------
                                     76 ; absolute internal ram data
                                     77 ;--------------------------------------------------------
                                     78 	.area IABS    (ABS,DATA)
                                     79 	.area IABS    (ABS,DATA)
                                     80 ;--------------------------------------------------------
                                     81 ; bit data
                                     82 ;--------------------------------------------------------
                                     83 	.area BSEG    (BIT)
                                     84 ;--------------------------------------------------------
                                     85 ; paged external ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area PSEG    (PAG,XDATA)
                                     88 ;--------------------------------------------------------
                                     89 ; external ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area XSEG    (XDATA)
                                     92 ;--------------------------------------------------------
                                     93 ; absolute external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area XABS    (ABS,XDATA)
                                     96 ;--------------------------------------------------------
                                     97 ; external initialized ram data
                                     98 ;--------------------------------------------------------
                                     99 	.area XISEG   (XDATA)
                                    100 	.area HOME    (CODE)
                                    101 	.area GSINIT0 (CODE)
                                    102 	.area GSINIT1 (CODE)
                                    103 	.area GSINIT2 (CODE)
                                    104 	.area GSINIT3 (CODE)
                                    105 	.area GSINIT4 (CODE)
                                    106 	.area GSINIT5 (CODE)
                                    107 	.area GSINIT  (CODE)
                                    108 	.area GSFINAL (CODE)
                                    109 	.area CSEG    (CODE)
                                    110 ;--------------------------------------------------------
                                    111 ; global & static initialisations
                                    112 ;--------------------------------------------------------
                                    113 	.area HOME    (CODE)
                                    114 	.area GSINIT  (CODE)
                                    115 	.area GSFINAL (CODE)
                                    116 	.area GSINIT  (CODE)
                                    117 ;	./src/MPU6050.c:5: uint8_t Ascale = AFS_2G;     // AFS_2G, AFS_4G, AFS_8G, AFS_16G
      000000 75*00 00         [24]  118 	mov	_Ascale,#0x00
                                    119 ;	./src/MPU6050.c:6: uint8_t Gscale = GFS_500DPS; // GFS_250DPS, GFS_500DPS, GFS_1000DPS, GFS_2000DPS
      000003 75*01 01         [24]  120 	mov	_Gscale,#0x01
                                    121 ;	./src/MPU6050.c:7: uint8_t Mmode = 0x06;        // Either 8 Hz 0x02) or 100 Hz (0x06) magnetometer data ODR  
      000006 75*02 06         [24]  122 	mov	_Mmode,#0x06
                                    123 ;	./src/MPU6050.c:9: uint8_t i2c_package[6] = {0};
      000009 75*03 00         [24]  124 	mov	_i2c_package,#0x00
                                    125 ;--------------------------------------------------------
                                    126 ; Home
                                    127 ;--------------------------------------------------------
                                    128 	.area HOME    (CODE)
                                    129 	.area HOME    (CODE)
                                    130 ;--------------------------------------------------------
                                    131 ; code
                                    132 ;--------------------------------------------------------
                                    133 	.area CSEG    (CODE)
                                    134 ;------------------------------------------------------------
                                    135 ;Allocation info for local variables in function 'MPU6050_INIT'
                                    136 ;------------------------------------------------------------
                                    137 ;accel_fchoice_b           Allocated to registers 
                                    138 ;A_DLPFCFG                 Allocated to registers 
                                    139 ;mpu6050_i                 Allocated to registers 
                                    140 ;------------------------------------------------------------
                                    141 ;	./src/MPU6050.c:11: void MPU6050_INIT(void)
                                    142 ;	-----------------------------------------
                                    143 ;	 function MPU6050_INIT
                                    144 ;	-----------------------------------------
      000000                        145 _MPU6050_INIT:
                           000007   146 	ar7 = 0x07
                           000006   147 	ar6 = 0x06
                           000005   148 	ar5 = 0x05
                           000004   149 	ar4 = 0x04
                           000003   150 	ar3 = 0x03
                           000002   151 	ar2 = 0x02
                           000001   152 	ar1 = 0x01
                           000000   153 	ar0 = 0x00
                                    154 ;	./src/MPU6050.c:17: delay_ms(100);                                          // Delay 100 ms
      000000 90 00 64         [24]  155 	mov	dptr,#0x0064
      000003 12r00r00         [24]  156 	lcall	_delay_ms
                                    157 ;	./src/MPU6050.c:18: writeByte(MPU6050_ADDRESS, PWR_MGMT_1, 0x00);           // Clear sleep mode bit (6), enable all sensors 
      000006 75*09 6B         [24]  158 	mov	_writeByte_PARM_2,#0x6b
      000009 75*0A 00         [24]  159 	mov	_writeByte_PARM_3,#0x00
      00000C 75 82 D0         [24]  160 	mov	dpl,#0xd0
      00000F 12r00r8F         [24]  161 	lcall	_writeByte
                                    162 ;	./src/MPU6050.c:19: delay_ms(100);                                          // Delay 100 ms for PLL to get established on x-axis gyro; should check for PLL ready interrupt  
      000012 90 00 64         [24]  163 	mov	dptr,#0x0064
      000015 12r00r00         [24]  164 	lcall	_delay_ms
                                    165 ;	./src/MPU6050.c:20: writeByte(MPU6050_ADDRESS , SIGNAL_PATH_RESET , 0x07);
      000018 75*09 68         [24]  166 	mov	_writeByte_PARM_2,#0x68
      00001B 75*0A 07         [24]  167 	mov	_writeByte_PARM_3,#0x07
      00001E 75 82 D0         [24]  168 	mov	dpl,#0xd0
      000021 12r00r8F         [24]  169 	lcall	_writeByte
                                    170 ;	./src/MPU6050.c:21: writeByte(MPU6050_ADDRESS, PWR_MGMT_1, 0x01);           // Set clock source to be PLL with x-axis gyroscope reference, bits 2:0 = 001
      000024 75*09 6B         [24]  171 	mov	_writeByte_PARM_2,#0x6b
      000027 75*0A 01         [24]  172 	mov	_writeByte_PARM_3,#0x01
      00002A 75 82 D0         [24]  173 	mov	dpl,#0xd0
      00002D 12r00r8F         [24]  174 	lcall	_writeByte
                                    175 ;	./src/MPU6050.c:22: writeByte(MPU6050_ADDRESS, CONFIG, 0x03);  
      000030 75*09 1A         [24]  176 	mov	_writeByte_PARM_2,#0x1a
      000033 75*0A 03         [24]  177 	mov	_writeByte_PARM_3,#0x03
      000036 75 82 D0         [24]  178 	mov	dpl,#0xd0
      000039 12r00r8F         [24]  179 	lcall	_writeByte
                                    180 ;	./src/MPU6050.c:23: writeByte(MPU6050_ADDRESS, SMPLRT_DIV, 0);              // Use a 1000 Hz rate; the same rate set in CONFIG above     
      00003C 75*09 19         [24]  181 	mov	_writeByte_PARM_2,#0x19
      00003F 75*0A 00         [24]  182 	mov	_writeByte_PARM_3,#0x00
      000042 75 82 D0         [24]  183 	mov	dpl,#0xd0
      000045 12r00r8F         [24]  184 	lcall	_writeByte
                                    185 ;	./src/MPU6050.c:24: mpu6050_i = (Gscale << 3) | 0x00;
      000048 E5*01            [12]  186 	mov	a,_Gscale
      00004A C4               [12]  187 	swap	a
      00004B 03               [12]  188 	rr	a
      00004C 54 F8            [12]  189 	anl	a,#0xf8
      00004E FF               [12]  190 	mov	r7,a
      00004F 8F*0A            [24]  191 	mov	_writeByte_PARM_3,r7
                                    192 ;	./src/MPU6050.c:25: writeByte(MPU6050_ADDRESS, GYRO_CONFIG, mpu6050_i);     // Write new GYRO_CONFIG value to register     
      000051 75*09 1B         [24]  193 	mov	_writeByte_PARM_2,#0x1b
      000054 75 82 D0         [24]  194 	mov	dpl,#0xd0
      000057 12r00r8F         [24]  195 	lcall	_writeByte
                                    196 ;	./src/MPU6050.c:26: mpu6050_i = (Ascale << 3);
      00005A E5*00            [12]  197 	mov	a,_Ascale
      00005C C4               [12]  198 	swap	a
      00005D 03               [12]  199 	rr	a
      00005E 54 F8            [12]  200 	anl	a,#0xf8
      000060 F5*0A            [12]  201 	mov	_writeByte_PARM_3,a
                                    202 ;	./src/MPU6050.c:27: writeByte(MPU6050_ADDRESS, ACCEL_CONFIG, mpu6050_i);    // Write new ACCEL_CONFIG register value
      000062 75*09 1C         [24]  203 	mov	_writeByte_PARM_2,#0x1c
      000065 75 82 D0         [24]  204 	mov	dpl,#0xd0
      000068 12r00r8F         [24]  205 	lcall	_writeByte
                                    206 ;	./src/MPU6050.c:29: writeByte(MPU6050_ADDRESS, ACCEL_CONFIG2, mpu6050_i);   // Write new ACCEL_CONFIG2 register value	
      00006B 75*09 1D         [24]  207 	mov	_writeByte_PARM_2,#0x1d
      00006E 75*0A 03         [24]  208 	mov	_writeByte_PARM_3,#0x03
      000071 75 82 D0         [24]  209 	mov	dpl,#0xd0
      000074 12r00r8F         [24]  210 	lcall	_writeByte
                                    211 ;	./src/MPU6050.c:30: writeByte(MPU6050_ADDRESS, INT_PIN_CFG, 0x22);    
      000077 75*09 37         [24]  212 	mov	_writeByte_PARM_2,#0x37
      00007A 75*0A 22         [24]  213 	mov	_writeByte_PARM_3,#0x22
      00007D 75 82 D0         [24]  214 	mov	dpl,#0xd0
      000080 12r00r8F         [24]  215 	lcall	_writeByte
                                    216 ;	./src/MPU6050.c:31: writeByte(MPU6050_ADDRESS, INT_ENABLE, 0x00);           // disable data ready (bit 0) interrupt
      000083 75*09 38         [24]  217 	mov	_writeByte_PARM_2,#0x38
      000086 75*0A 00         [24]  218 	mov	_writeByte_PARM_3,#0x00
      000089 75 82 D0         [24]  219 	mov	dpl,#0xd0
                                    220 ;	./src/MPU6050.c:32: }
      00008C 02r00r8F         [24]  221 	ljmp	_writeByte
                                    222 ;------------------------------------------------------------
                                    223 ;Allocation info for local variables in function 'writeByte'
                                    224 ;------------------------------------------------------------
                                    225 ;subAddress                Allocated with name '_writeByte_PARM_2'
                                    226 ;REG_data                  Allocated with name '_writeByte_PARM_3'
                                    227 ;address                   Allocated to registers 
                                    228 ;------------------------------------------------------------
                                    229 ;	./src/MPU6050.c:35: void writeByte(uint8_t address, uint8_t subAddress, uint8_t REG_data)
                                    230 ;	-----------------------------------------
                                    231 ;	 function writeByte
                                    232 ;	-----------------------------------------
      00008F                        233 _writeByte:
                                    234 ;	./src/MPU6050.c:37: Single_WriteI2C(address, subAddress, REG_data);
      00008F 85*09*00         [24]  235 	mov	_Single_WriteI2C_PARM_2,_writeByte_PARM_2
      000092 85*0A*00         [24]  236 	mov	_Single_WriteI2C_PARM_3,_writeByte_PARM_3
                                    237 ;	./src/MPU6050.c:38: }
      000095 02r00r00         [24]  238 	ljmp	_Single_WriteI2C
                                    239 ;------------------------------------------------------------
                                    240 ;Allocation info for local variables in function 'readByte'
                                    241 ;------------------------------------------------------------
                                    242 ;subAddress                Allocated with name '_readByte_PARM_2'
                                    243 ;address                   Allocated to registers 
                                    244 ;------------------------------------------------------------
                                    245 ;	./src/MPU6050.c:41: uint8_t readByte(uint8_t address, uint8_t subAddress)
                                    246 ;	-----------------------------------------
                                    247 ;	 function readByte
                                    248 ;	-----------------------------------------
      000098                        249 _readByte:
                                    250 ;	./src/MPU6050.c:43: return Single_ReadI2C(address, subAddress); 
      000098 85*0B*00         [24]  251 	mov	_Single_ReadI2C_PARM_2,_readByte_PARM_2
                                    252 ;	./src/MPU6050.c:44: }
      00009B 02r00r00         [24]  253 	ljmp	_Single_ReadI2C
                                    254 ;------------------------------------------------------------
                                    255 ;Allocation info for local variables in function 'readMPU6050_AccelData'
                                    256 ;------------------------------------------------------------
                                    257 ;buffer                    Allocated with name '_readMPU6050_AccelData_buffer_65536_27'
                                    258 ;sloc0                     Allocated with name '_readMPU6050_AccelData_sloc0_1_0'
                                    259 ;------------------------------------------------------------
                                    260 ;	./src/MPU6050.c:46: void readMPU6050_AccelData(int * buffer)
                                    261 ;	-----------------------------------------
                                    262 ;	 function readMPU6050_AccelData
                                    263 ;	-----------------------------------------
      00009E                        264 _readMPU6050_AccelData:
      00009E 85 82*0C         [24]  265 	mov	_readMPU6050_AccelData_buffer_65536_27,dpl
      0000A1 85 83*0D         [24]  266 	mov	(_readMPU6050_AccelData_buffer_65536_27 + 1),dph
      0000A4 85 F0*0E         [24]  267 	mov	(_readMPU6050_AccelData_buffer_65536_27 + 2),b
                                    268 ;	./src/MPU6050.c:49: i2c_package[0] = readByte(MPU6050_ADDRESS, ACCEL_XOUT_H);
      0000A7 75*0B 3B         [24]  269 	mov	_readByte_PARM_2,#0x3b
      0000AA 75 82 D0         [24]  270 	mov	dpl,#0xd0
      0000AD 12r00r98         [24]  271 	lcall	_readByte
      0000B0 E5 82            [12]  272 	mov	a,dpl
      0000B2 F5*03            [12]  273 	mov	_i2c_package,a
                                    274 ;	./src/MPU6050.c:50: i2c_package[1] = readByte(MPU6050_ADDRESS, ACCEL_XOUT_L);
      0000B4 75*0B 3C         [24]  275 	mov	_readByte_PARM_2,#0x3c
      0000B7 75 82 D0         [24]  276 	mov	dpl,#0xd0
      0000BA 12r00r98         [24]  277 	lcall	_readByte
      0000BD E5 82            [12]  278 	mov	a,dpl
      0000BF F5*04            [12]  279 	mov	(_i2c_package + 0x0001),a
                                    280 ;	./src/MPU6050.c:51: i2c_package[2] = readByte(MPU6050_ADDRESS, ACCEL_YOUT_H);
      0000C1 75*0B 3D         [24]  281 	mov	_readByte_PARM_2,#0x3d
      0000C4 75 82 D0         [24]  282 	mov	dpl,#0xd0
      0000C7 12r00r98         [24]  283 	lcall	_readByte
      0000CA E5 82            [12]  284 	mov	a,dpl
      0000CC F5*05            [12]  285 	mov	(_i2c_package + 0x0002),a
                                    286 ;	./src/MPU6050.c:52: i2c_package[3] = readByte(MPU6050_ADDRESS, ACCEL_YOUT_L);
      0000CE 75*0B 3E         [24]  287 	mov	_readByte_PARM_2,#0x3e
      0000D1 75 82 D0         [24]  288 	mov	dpl,#0xd0
      0000D4 12r00r98         [24]  289 	lcall	_readByte
      0000D7 E5 82            [12]  290 	mov	a,dpl
      0000D9 F5*06            [12]  291 	mov	(_i2c_package + 0x0003),a
                                    292 ;	./src/MPU6050.c:53: i2c_package[4] = readByte(MPU6050_ADDRESS, ACCEL_ZOUT_H);
      0000DB 75*0B 3F         [24]  293 	mov	_readByte_PARM_2,#0x3f
      0000DE 75 82 D0         [24]  294 	mov	dpl,#0xd0
      0000E1 12r00r98         [24]  295 	lcall	_readByte
      0000E4 E5 82            [12]  296 	mov	a,dpl
      0000E6 F5*07            [12]  297 	mov	(_i2c_package + 0x0004),a
                                    298 ;	./src/MPU6050.c:54: i2c_package[5] = readByte(MPU6050_ADDRESS, ACCEL_ZOUT_L);
      0000E8 75*0B 40         [24]  299 	mov	_readByte_PARM_2,#0x40
      0000EB 75 82 D0         [24]  300 	mov	dpl,#0xd0
      0000EE 12r00r98         [24]  301 	lcall	_readByte
      0000F1 AC 82            [24]  302 	mov	r4,dpl
      0000F3 8C*08            [24]  303 	mov	(_i2c_package + 0x0005),r4
                                    304 ;	./src/MPU6050.c:56: buffer[0] = (int)(((int)i2c_package[0] << 8) | i2c_package[1]) ;  // Turn the MSB and LSB into a signed 16-bit value
      0000F5 AB*03            [24]  305 	mov	r3,_i2c_package
      0000F7 7A 00            [12]  306 	mov	r2,#0x00
      0000F9 AE*04            [24]  307 	mov	r6,(_i2c_package + 0x0001)
      0000FB 7F 00            [12]  308 	mov	r7,#0x00
      0000FD EE               [12]  309 	mov	a,r6
      0000FE 42 02            [12]  310 	orl	ar2,a
      000100 EF               [12]  311 	mov	a,r7
      000101 42 03            [12]  312 	orl	ar3,a
      000103 85*0C 82         [24]  313 	mov	dpl,_readMPU6050_AccelData_buffer_65536_27
      000106 85*0D 83         [24]  314 	mov	dph,(_readMPU6050_AccelData_buffer_65536_27 + 1)
      000109 85*0E F0         [24]  315 	mov	b,(_readMPU6050_AccelData_buffer_65536_27 + 2)
      00010C EA               [12]  316 	mov	a,r2
      00010D 12r00r00         [24]  317 	lcall	__gptrput
      000110 A3               [24]  318 	inc	dptr
      000111 EB               [12]  319 	mov	a,r3
      000112 12r00r00         [24]  320 	lcall	__gptrput
                                    321 ;	./src/MPU6050.c:57: buffer[1] = (int)(((int)i2c_package[2] << 8) | i2c_package[3]) ;  
      000115 74 02            [12]  322 	mov	a,#0x02
      000117 25*0C            [12]  323 	add	a,_readMPU6050_AccelData_buffer_65536_27
      000119 FD               [12]  324 	mov	r5,a
      00011A E4               [12]  325 	clr	a
      00011B 35*0D            [12]  326 	addc	a,(_readMPU6050_AccelData_buffer_65536_27 + 1)
      00011D FE               [12]  327 	mov	r6,a
      00011E AF*0E            [24]  328 	mov	r7,(_readMPU6050_AccelData_buffer_65536_27 + 2)
      000120 AA*05            [24]  329 	mov	r2,(_i2c_package + 0x0002)
      000122 7B 00            [12]  330 	mov	r3,#0x00
      000124 8A*10            [24]  331 	mov	(_readMPU6050_AccelData_sloc0_1_0 + 1),r2
                                    332 ;	1-genFromRTrack replaced	mov	_readMPU6050_AccelData_sloc0_1_0,#0x00
      000126 8B*0F            [24]  333 	mov	_readMPU6050_AccelData_sloc0_1_0,r3
      000128 AA*06            [24]  334 	mov	r2,(_i2c_package + 0x0003)
      00012A 7B 00            [12]  335 	mov	r3,#0x00
      00012C E5*0F            [12]  336 	mov	a,_readMPU6050_AccelData_sloc0_1_0
      00012E 42 02            [12]  337 	orl	ar2,a
      000130 E5*10            [12]  338 	mov	a,(_readMPU6050_AccelData_sloc0_1_0 + 1)
      000132 42 03            [12]  339 	orl	ar3,a
      000134 8D 82            [24]  340 	mov	dpl,r5
      000136 8E 83            [24]  341 	mov	dph,r6
      000138 8F F0            [24]  342 	mov	b,r7
      00013A EA               [12]  343 	mov	a,r2
      00013B 12r00r00         [24]  344 	lcall	__gptrput
      00013E A3               [24]  345 	inc	dptr
      00013F EB               [12]  346 	mov	a,r3
      000140 12r00r00         [24]  347 	lcall	__gptrput
                                    348 ;	./src/MPU6050.c:58: buffer[2] = (int)(((int)i2c_package[4] << 8) | i2c_package[5]) ; 
      000143 74 04            [12]  349 	mov	a,#0x04
      000145 25*0C            [12]  350 	add	a,_readMPU6050_AccelData_buffer_65536_27
      000147 FD               [12]  351 	mov	r5,a
      000148 E4               [12]  352 	clr	a
      000149 35*0D            [12]  353 	addc	a,(_readMPU6050_AccelData_buffer_65536_27 + 1)
      00014B FE               [12]  354 	mov	r6,a
      00014C AF*0E            [24]  355 	mov	r7,(_readMPU6050_AccelData_buffer_65536_27 + 2)
      00014E AA*07            [24]  356 	mov	r2,(_i2c_package + 0x0004)
      000150 7B 00            [12]  357 	mov	r3,#0x00
      000152 8A*10            [24]  358 	mov	(_readMPU6050_AccelData_sloc0_1_0 + 1),r2
                                    359 ;	1-genFromRTrack replaced	mov	_readMPU6050_AccelData_sloc0_1_0,#0x00
      000154 8B*0F            [24]  360 	mov	_readMPU6050_AccelData_sloc0_1_0,r3
      000156 8C 03            [24]  361 	mov	ar3,r4
      000158 7C 00            [12]  362 	mov	r4,#0x00
      00015A E5*0F            [12]  363 	mov	a,_readMPU6050_AccelData_sloc0_1_0
      00015C 42 03            [12]  364 	orl	ar3,a
      00015E E5*10            [12]  365 	mov	a,(_readMPU6050_AccelData_sloc0_1_0 + 1)
      000160 42 04            [12]  366 	orl	ar4,a
      000162 8D 82            [24]  367 	mov	dpl,r5
      000164 8E 83            [24]  368 	mov	dph,r6
      000166 8F F0            [24]  369 	mov	b,r7
      000168 EB               [12]  370 	mov	a,r3
      000169 12r00r00         [24]  371 	lcall	__gptrput
      00016C A3               [24]  372 	inc	dptr
      00016D EC               [12]  373 	mov	a,r4
                                    374 ;	./src/MPU6050.c:59: }
      00016E 02r00r00         [24]  375 	ljmp	__gptrput
                                    376 ;------------------------------------------------------------
                                    377 ;Allocation info for local variables in function 'readMPU6050_GyroData'
                                    378 ;------------------------------------------------------------
                                    379 ;buffer                    Allocated with name '_readMPU6050_GyroData_buffer_65536_29'
                                    380 ;sloc0                     Allocated with name '_readMPU6050_GyroData_sloc0_1_0'
                                    381 ;------------------------------------------------------------
                                    382 ;	./src/MPU6050.c:61: void readMPU6050_GyroData(int * buffer)
                                    383 ;	-----------------------------------------
                                    384 ;	 function readMPU6050_GyroData
                                    385 ;	-----------------------------------------
      000171                        386 _readMPU6050_GyroData:
      000171 85 82*11         [24]  387 	mov	_readMPU6050_GyroData_buffer_65536_29,dpl
      000174 85 83*12         [24]  388 	mov	(_readMPU6050_GyroData_buffer_65536_29 + 1),dph
      000177 85 F0*13         [24]  389 	mov	(_readMPU6050_GyroData_buffer_65536_29 + 2),b
                                    390 ;	./src/MPU6050.c:63: i2c_package[5] = readByte(MPU6050_ADDRESS, GYRO_ZOUT_L);
      00017A 75*0B 48         [24]  391 	mov	_readByte_PARM_2,#0x48
      00017D 75 82 D0         [24]  392 	mov	dpl,#0xd0
      000180 12r00r98         [24]  393 	lcall	_readByte
      000183 E5 82            [12]  394 	mov	a,dpl
      000185 F5*08            [12]  395 	mov	(_i2c_package + 0x0005),a
                                    396 ;	./src/MPU6050.c:64: i2c_package[4] = readByte(MPU6050_ADDRESS, GYRO_ZOUT_H);
      000187 75*0B 47         [24]  397 	mov	_readByte_PARM_2,#0x47
      00018A 75 82 D0         [24]  398 	mov	dpl,#0xd0
      00018D 12r00r98         [24]  399 	lcall	_readByte
      000190 E5 82            [12]  400 	mov	a,dpl
      000192 F5*07            [12]  401 	mov	(_i2c_package + 0x0004),a
                                    402 ;	./src/MPU6050.c:65: i2c_package[3] = readByte(MPU6050_ADDRESS, GYRO_YOUT_L);
      000194 75*0B 46         [24]  403 	mov	_readByte_PARM_2,#0x46
      000197 75 82 D0         [24]  404 	mov	dpl,#0xd0
      00019A 12r00r98         [24]  405 	lcall	_readByte
      00019D E5 82            [12]  406 	mov	a,dpl
      00019F F5*06            [12]  407 	mov	(_i2c_package + 0x0003),a
                                    408 ;	./src/MPU6050.c:66: i2c_package[2] = readByte(MPU6050_ADDRESS, GYRO_YOUT_H);
      0001A1 75*0B 45         [24]  409 	mov	_readByte_PARM_2,#0x45
      0001A4 75 82 D0         [24]  410 	mov	dpl,#0xd0
      0001A7 12r00r98         [24]  411 	lcall	_readByte
      0001AA E5 82            [12]  412 	mov	a,dpl
      0001AC F5*05            [12]  413 	mov	(_i2c_package + 0x0002),a
                                    414 ;	./src/MPU6050.c:67: i2c_package[1] = readByte(MPU6050_ADDRESS, GYRO_XOUT_L);
      0001AE 75*0B 44         [24]  415 	mov	_readByte_PARM_2,#0x44
      0001B1 75 82 D0         [24]  416 	mov	dpl,#0xd0
      0001B4 12r00r98         [24]  417 	lcall	_readByte
      0001B7 E5 82            [12]  418 	mov	a,dpl
      0001B9 F5*04            [12]  419 	mov	(_i2c_package + 0x0001),a
                                    420 ;	./src/MPU6050.c:68: i2c_package[0] = readByte(MPU6050_ADDRESS, GYRO_XOUT_H);
      0001BB 75*0B 43         [24]  421 	mov	_readByte_PARM_2,#0x43
      0001BE 75 82 D0         [24]  422 	mov	dpl,#0xd0
      0001C1 12r00r98         [24]  423 	lcall	_readByte
      0001C4 AC 82            [24]  424 	mov	r4,dpl
      0001C6 8C*03            [24]  425 	mov	_i2c_package,r4
                                    426 ;	./src/MPU6050.c:69: buffer[0] = (int)(((int)i2c_package[0] << 8) | i2c_package[1]) ;  // Turn the MSB and LSB into a signed 16-bit value
      0001C8 8C 03            [24]  427 	mov	ar3,r4
      0001CA 7C 00            [12]  428 	mov	r4,#0x00
      0001CC AA*04            [24]  429 	mov	r2,(_i2c_package + 0x0001)
      0001CE 7F 00            [12]  430 	mov	r7,#0x00
      0001D0 EA               [12]  431 	mov	a,r2
      0001D1 42 04            [12]  432 	orl	ar4,a
      0001D3 EF               [12]  433 	mov	a,r7
      0001D4 42 03            [12]  434 	orl	ar3,a
      0001D6 85*11 82         [24]  435 	mov	dpl,_readMPU6050_GyroData_buffer_65536_29
      0001D9 85*12 83         [24]  436 	mov	dph,(_readMPU6050_GyroData_buffer_65536_29 + 1)
      0001DC 85*13 F0         [24]  437 	mov	b,(_readMPU6050_GyroData_buffer_65536_29 + 2)
      0001DF EC               [12]  438 	mov	a,r4
      0001E0 12r00r00         [24]  439 	lcall	__gptrput
      0001E3 A3               [24]  440 	inc	dptr
      0001E4 EB               [12]  441 	mov	a,r3
      0001E5 12r00r00         [24]  442 	lcall	__gptrput
                                    443 ;	./src/MPU6050.c:70: buffer[1] = (int)(((int)i2c_package[2] << 8) | i2c_package[3]) ;  
      0001E8 74 02            [12]  444 	mov	a,#0x02
      0001EA 25*11            [12]  445 	add	a,_readMPU6050_GyroData_buffer_65536_29
      0001EC FD               [12]  446 	mov	r5,a
      0001ED E4               [12]  447 	clr	a
      0001EE 35*12            [12]  448 	addc	a,(_readMPU6050_GyroData_buffer_65536_29 + 1)
      0001F0 FE               [12]  449 	mov	r6,a
      0001F1 AF*13            [24]  450 	mov	r7,(_readMPU6050_GyroData_buffer_65536_29 + 2)
      0001F3 AB*05            [24]  451 	mov	r3,(_i2c_package + 0x0002)
      0001F5 7C 00            [12]  452 	mov	r4,#0x00
      0001F7 8B*15            [24]  453 	mov	(_readMPU6050_GyroData_sloc0_1_0 + 1),r3
                                    454 ;	1-genFromRTrack replaced	mov	_readMPU6050_GyroData_sloc0_1_0,#0x00
      0001F9 8C*14            [24]  455 	mov	_readMPU6050_GyroData_sloc0_1_0,r4
      0001FB AA*06            [24]  456 	mov	r2,(_i2c_package + 0x0003)
      0001FD 7C 00            [12]  457 	mov	r4,#0x00
      0001FF E5*14            [12]  458 	mov	a,_readMPU6050_GyroData_sloc0_1_0
      000201 42 02            [12]  459 	orl	ar2,a
      000203 E5*15            [12]  460 	mov	a,(_readMPU6050_GyroData_sloc0_1_0 + 1)
      000205 42 04            [12]  461 	orl	ar4,a
      000207 8D 82            [24]  462 	mov	dpl,r5
      000209 8E 83            [24]  463 	mov	dph,r6
      00020B 8F F0            [24]  464 	mov	b,r7
      00020D EA               [12]  465 	mov	a,r2
      00020E 12r00r00         [24]  466 	lcall	__gptrput
      000211 A3               [24]  467 	inc	dptr
      000212 EC               [12]  468 	mov	a,r4
      000213 12r00r00         [24]  469 	lcall	__gptrput
                                    470 ;	./src/MPU6050.c:71: buffer[2] = (int)(((int)i2c_package[4] << 8) | i2c_package[5]) ; 
      000216 74 04            [12]  471 	mov	a,#0x04
      000218 25*11            [12]  472 	add	a,_readMPU6050_GyroData_buffer_65536_29
      00021A FD               [12]  473 	mov	r5,a
      00021B E4               [12]  474 	clr	a
      00021C 35*12            [12]  475 	addc	a,(_readMPU6050_GyroData_buffer_65536_29 + 1)
      00021E FE               [12]  476 	mov	r6,a
      00021F AF*13            [24]  477 	mov	r7,(_readMPU6050_GyroData_buffer_65536_29 + 2)
      000221 AB*07            [24]  478 	mov	r3,(_i2c_package + 0x0004)
      000223 7C 00            [12]  479 	mov	r4,#0x00
      000225 8B*15            [24]  480 	mov	(_readMPU6050_GyroData_sloc0_1_0 + 1),r3
                                    481 ;	1-genFromRTrack replaced	mov	_readMPU6050_GyroData_sloc0_1_0,#0x00
      000227 8C*14            [24]  482 	mov	_readMPU6050_GyroData_sloc0_1_0,r4
      000229 AA*08            [24]  483 	mov	r2,(_i2c_package + 0x0005)
      00022B 7C 00            [12]  484 	mov	r4,#0x00
      00022D E5*14            [12]  485 	mov	a,_readMPU6050_GyroData_sloc0_1_0
      00022F 42 02            [12]  486 	orl	ar2,a
      000231 E5*15            [12]  487 	mov	a,(_readMPU6050_GyroData_sloc0_1_0 + 1)
      000233 42 04            [12]  488 	orl	ar4,a
      000235 8D 82            [24]  489 	mov	dpl,r5
      000237 8E 83            [24]  490 	mov	dph,r6
      000239 8F F0            [24]  491 	mov	b,r7
      00023B EA               [12]  492 	mov	a,r2
      00023C 12r00r00         [24]  493 	lcall	__gptrput
      00023F A3               [24]  494 	inc	dptr
      000240 EC               [12]  495 	mov	a,r4
                                    496 ;	./src/MPU6050.c:72: }
      000241 02r00r00         [24]  497 	ljmp	__gptrput
                                    498 ;------------------------------------------------------------
                                    499 ;Allocation info for local variables in function 'resetMPU6050'
                                    500 ;------------------------------------------------------------
                                    501 ;	./src/MPU6050.c:74: void resetMPU6050(void) 
                                    502 ;	-----------------------------------------
                                    503 ;	 function resetMPU6050
                                    504 ;	-----------------------------------------
      000244                        505 _resetMPU6050:
                                    506 ;	./src/MPU6050.c:77: writeByte(MPU6050_ADDRESS, PWR_MGMT_1, 0x80); // Write a one to bit 7 reset bit; toggle reset device
      000244 75*09 6B         [24]  507 	mov	_writeByte_PARM_2,#0x6b
      000247 75*0A 80         [24]  508 	mov	_writeByte_PARM_3,#0x80
      00024A 75 82 D0         [24]  509 	mov	dpl,#0xd0
      00024D 12r00r8F         [24]  510 	lcall	_writeByte
                                    511 ;	./src/MPU6050.c:78: delay_ms(100);
      000250 90 00 64         [24]  512 	mov	dptr,#0x0064
                                    513 ;	./src/MPU6050.c:79: }
      000253 02r00r00         [24]  514 	ljmp	_delay_ms
                                    515 	.area CSEG    (CODE)
                                    516 	.area CONST   (CODE)
                                    517 	.area XINIT   (CODE)
                                    518 	.area CABS    (ABS,CODE)
